{"version":3,"sources":["reducers/index.js","components/Set/index.js","components/Set/set.js","components/Sets/index.js","components/Sets/sets.js","components/Card/index.js","components/Card/card.js","components/Cards/index.js","components/Cards/cards.js","components/App/app.js","components/App/index.js","actions/index.js","index.js"],"names":["initialState","currentSet","Set","clickHandler","e","_this","props","onClick","code","console","log","this","react_default","a","createElement","className","Link","to","concat","src","logo","alt","symbol","name","data","Component","Sets","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pokemonSets","fetchData","_this2","fetch","then","response","json","parsedJSON","sets","reverse","map","set","releaseDate","standardLegal","expandedLegal","symbolUrl","logoUrl","setState","catch","error","_this3","pokemonSet","components_Set","assign","onSetClick","key","Card","image","Cards","pokemonCards","match","params","setId","cards","card","id","imageUrl","pokemonCard","components_Card","App","BrowserRouter","Route","exact","path","component","connect","store","dispatch","setCurrentSet","type","payload","createStore","arguments","length","undefined","action","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.48a70cf6.chunk.js","sourcesContent":["import {SET_CURRENT_SET} from \"../actions/index\";\r\n\r\nconst initialState = { currentSet: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  switch(action.type) {\r\n    case SET_CURRENT_SET: {\r\n      return {currentSet: action.payload}\r\n    }\r\n    default: return state;\r\n  }\r\n}","import Set from './set';\r\n\r\nexport default Set;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./set.css\";\r\n\r\nexport default class Set extends Component {\r\n  clickHandler = e => {\r\n    this.props.onClick(this.props.code);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <li className=\"set\">\r\n        <Link to={`/cards/${this.props.code}`}>\r\n          <div className=\"set__logo\">\r\n            <img\r\n              className=\"set__logo-img\"\r\n              src={this.props.logo}\r\n              alt=\"Placeholder\"\r\n            />\r\n          </div>\r\n          <div className=\"set__content\">\r\n            <div className=\"set__media\">\r\n              <div className=\"set__media-left\">\r\n                <figure className=\"set__media-logo\">\r\n                  <img\r\n                    className=\"set__media-logo-img\"\r\n                    src={this.props.symbol}\r\n                    alt=\"Placeholder\"\r\n                  />\r\n                </figure>\r\n              </div>\r\n              <div className=\"set__media-right\">\r\n                <p className=\"set__media-title\">{this.props.name}</p>\r\n                <p className=\"set__media-subtitle\">\r\n                  Released {this.props.data}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"set__container\">\r\n              <ul className=\"set__list\">\r\n                <li className=\"set__item\">Standard Legal</li>\r\n                <li className=\"set__item\">Expanded Legal</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import Sets from './sets';\r\n\r\nexport default Sets;","import React, { Component } from \"react\";\r\n\r\nimport \"./sets.css\";\r\n\r\nimport Set from \"../Set\";\r\n\r\nexport default class Sets extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pokemonSets: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    fetch(\"https://api.pokemontcg.io/v1/sets/\")\r\n      .then(response => response.json())\r\n      .then(parsedJSON =>\r\n        parsedJSON.sets.reverse().map(set => ({\r\n          code: `${set.code}`,\r\n          name: `${set.name}`,\r\n          data: `${set.releaseDate}`,\r\n          standardLegal: `${set.standardLegal}`,\r\n          expandedLegal: `${set.expandedLegal}`,\r\n          symbol: `${set.symbolUrl}`,\r\n          logo: `${set.logoUrl}`\r\n        }))\r\n      )\r\n      .then(pokemonSets =>\r\n        this.setState({\r\n          pokemonSets\r\n        })\r\n      )\r\n      .catch(error => console.log(\"parsing failed\", error));\r\n  }\r\n\r\n  render() {\r\n    const { pokemonSets } = this.state;\r\n\r\n    return (\r\n      <ul className=\"sets-list\">\r\n        {pokemonSets.map(pokemonSet => (\r\n          <Set\r\n            onClick={this.props.onSetClick}\r\n            key={pokemonSet.code}\r\n            {...pokemonSet}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import Card from \"./card\";\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport './card.css';\r\n\r\nexport default class Card extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <li className=\"card\">\r\n            <figure className=\"card__pic\">\r\n                <img\r\n                    className=\"card__pic-img\"\r\n                    alt=\"Placeholder\"\r\n                    src={this.props.image}\r\n                />\r\n            </figure>\r\n        </li>\r\n        );\r\n    }\r\n}","import Cards from \"./cards\";\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./cards.css\";\r\n\r\nimport Card from \"../Card\";\r\n\r\nexport default class Cards extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pokemonCards: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    fetch(\r\n      `https://api.pokemontcg.io/v1/cards?setCode=${\r\n        this.props.match.params.setId\r\n      }`\r\n    )\r\n      .then(response => response.json())\r\n      .then(parsedJSON =>\r\n        parsedJSON.cards.map(card => ({\r\n          id: `${card.id}`,\r\n          name: `${card.name}`,\r\n          image: `${card.imageUrl}`\r\n        }))\r\n      )\r\n      .then(pokemonCards =>\r\n        this.setState({\r\n          pokemonCards\r\n        })\r\n      )\r\n      .catch(error => console.log(\"parsing failed\", error));\r\n  }\r\n\r\n  render() {\r\n    const { pokemonCards } = this.state;\r\n\r\n    return (\r\n      <div className=\"cards\">\r\n        <Link to={\"/\"} className=\"cards-home\">Вернуться на главную</Link>\r\n        <ul className=\"cards-list\">\r\n          {pokemonCards.map(pokemonCard => (\r\n            <Card key={pokemonCard.id} {...pokemonCard} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionSetCurrentSet } from \"../../actions\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport \"./app.css\";\r\n\r\nimport Sets from \"../Sets\";\r\nimport Cards from \"../Cards\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Route exact path=\"/\" component={Sets} />\r\n          <Route path=\"/cards/:setId\" component={Cards} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  store => {\r\n    return { currentSet: store.currentSet };\r\n  },\r\n  dispatch => {\r\n    return { setCurrentSet: set => dispatch(actionSetCurrentSet(set)) };\r\n  }\r\n)(App);\r\n","import App from './app';\r\n\r\nexport default App;","export const SET_CURRENT_SET = \"SET_CURRENT_SET\";\r\n\r\nexport const actionSetCurrentSet = code => {\r\n  return { type: SET_CURRENT_SET, payload: code };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}